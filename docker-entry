#!/bin/bash

set -e

# Clone repo
echo "Cloning $CHECK50_ORG/$CHECK50_REPO@$CHECK50_BRANCH..."
git clone --branch $CHECK50_BRANCH --single-branch https://$CHECK50_TOKEN:x-oauth-basic@github.com/$CHECK50_ORG/$CHECK50_REPO.git

# Checkout commit to be tested
echo "Chanding directory to $CHECK50_REPO..."
cd $CHECK50_REPO

echo "Checking out $CHECK50_COMMIT..."
git checkout $CHECK50_COMMIT

# Construct tag name
echo "Constructing tag name..."
TAG_NAME="$CHECK50_REPO:$CHECK50_BRANCH@$(date '+%Y%m%dT%H%M%SZ')"
echo "Tag name is $TAG_NAME..."

# Squash commit
echo "Squashing commit..."
TAG_HASH=$(git commit-tree HEAD^{tree} -m "$TAG_NAME")
echo "Tag hash is $TAG_HASH"

# Push tag
echo "Pushing tag $TAG_NAME ($TAG_HASH)..."
git push origin $TAG_HASH:refs/tags/$TAG_NAME

# Remove remote origin
echo "Removing remote origin..."
git remote remove origin

function sandbox() {
    eval "CHECK50_PRIVATE_KEY= CHECK50_TOKEN= $@"
}

# Get style50 result
STYLE50_RESULT_DEFAULT="null"
STYLE50_RESULT="$STYLE50_RESULT_DEFAULT"
if [ "$CHECK50_STYLE" == "1" ]; then
    echo "Running style50..."
    STYLE50_RESULT=$(sandbox 'style50 --verbose --ignore \*/.\* --output=json $PWD')
    if [ $? -ne 0 ]; then
        STYLE50_RESULT="$STYLE50_RESULT_DEFAULT"
    fi

    echo "style50 result is $STYLE50_RESULT"
else
    echo "CHECK50_STYLE is $CHECK50_STYLE. Skipping style50..."
fi

# Get check50 result
CHECK50_OUT=$(mktemp)
echo -n "null" > $CHECK50_OUT

if [ -n "$CHECK50_SLUG" ]; then
    echo "Running check50..."
    sandbox "check50 --local --verbose --output=json --output-file='$CHECK50_OUT' '$CHECK50_SLUG'" || true
else
    echo "CHECK50_SLUG is $CHECK50_SLUG. Skipping check50..."
fi

CHECK50_RESULT=$(cat $CHECK50_OUT)
echo "check50 result is $CHECK50_RESULT"

# Construct payload
PAYLOAD="{ \
    \"id\": \"$CHECK50_ID\", \
    \"org\": \"$CHECK50_ORG\", \
    \"repo\": \"$CHECK50_REPO\", \
    \"slug\": \"$CHECK50_BRANCH\", \
    \"commit_hash\": \"$CHECK50_COMMIT\", \
    \"style50\": $STYLE50_RESULT, \
    \"check50\": $CHECK50_RESULT, \
    \"tag_hash\": \"$TAG_HASH\", \
    \"pushed_at\": \"$CHECK50_PUSHED_AT\"
}"

echo "Payload is $PAYLOAD"
echo "Compacting payload..."
PAYLOAD="$(jq -c . <<<"$PAYLOAD")"
echo "Compact payload is $PAYLOAD"

echo "Signing payload..."
SIGNATURE="$(openssl dgst -sha512 -sigopt rsa_padding_mode:pss -sigopt rsa_pss_saltlen:-2 -sign <(echo -e "$CHECK50_PRIVATE_KEY") <(echo -n "$PAYLOAD") | openssl base64 -A)"

# Send payload to callback URL
echo "Sending payload to $CHECK50_CALLBACK_URL..."
echo -n "$PAYLOAD" | curl --fail --header "Content-Type: application/json" --header "X-Payload-Signature: $SIGNATURE" --data @- "$CHECK50_CALLBACK_URL"
